# -*- coding: utf-8 -*-
"""Projeto.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19-_SiuNu91raA1pZCfwL52eyC3K1J76C

# Projeto Disciplina Ciência de Dados
* Universidade nove de julho
* Sistemas de Informação
---

# Integrantes

* Rodrigo Freitas Barreto RA:  920126602
* Marcos Vinicius Bueno da Silva                         RA 920101311
---

#              Estudo de Caso
# *Acidentes Aéreos Ocorridos no Brasil de 2010 a 2019*
---

   O projeto tem por objetivo aplicar os conceitos teóricos e práticos de estatística com Python e Ciência de Dados afim de analisar e gerar relatórios com a base de dados do CENIPA - (Centro de Investigação e Prevenção de Acidentes Aeronáuticos) conforme levantamento de dados entre 2010 e 2019. Contudo, aplicar análise com base no estudo de Ciencias de Dados e explicar o foco de estudo e qual a tomada de decisão.

Segue abaixo os itens que o projeto deverá conter

* Análise de correlações entre variáveis que mostrem seus significados e quais informações podem ser obtidas para tomada de decisão.

* Apresentar ao menos um estudo com aplicação de Regressão Linear para analisar a relação entre o número de assentos e outras variáveis a serem escolhidas.

* Análise de correlações entre variáveis que mostrem seus significados e quais informações podem ser obtidas para tomada de decisão.

* No entanto para solidificar os estudos realizados no final do projeto para conhecimento de todos, abordaremos os conceitos teóricos, estatíticos, matemáticos e bibliotecas utilizados no projeto.

##### Estudos

* 1 Quais os tipos de Ocorrências no Brasil ?
* 2 Quais os tipos de Aeronaves  ?
* 3 Quais os tipos de motor ?
* 4 Quais os tipos de Potência ?
* 5 Qual a quantidade de ``assentos`` por ``acorrências`` ? (Regressão Linear)

# Importação da Bibliotecas

  A função da importação das bibliotecas com Python são de uso primordial para aplicabilidade de estudo com Data Science. Com isso, utilizaremos algumas bibliotecas na utilização do desenvolvimento neste projeto

  A grande vantagem da utilização das bibliotecas trás as seguintes vantagens
  * Simplificar a aprogramação;
  * Sem a necessidade de reescrever o código;
  * possibilidades de trabalhar com os dados para ter uma utilização no desenvolvimento neste projeto.


* ``numpy``
* ``pandas`` 
* ``seaborn``
* ``matplotlib``
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

"""# Importação dos Dados

  Utilizaresmo o arquivo de dados denominado  ``ocorrencias_cenipa.csv``, onde  ser utilizado no desenvolvimento deste projeto.

  Na utilização desse arquivo será o foco desse projeto e o desenvolvimento com base nesses dados, que o arquivo está fornecendo para este projeto.

  Com isso foi feito uma importação desse arquivo, e foi criado uma variável chamado de ``ocorrências``, para ter uma otimização para o desenvolvimento com este projeto.

"""

ocorrencias = pd.read_csv('ocorrencias_cenipa.csv', sep=';', encoding='latin-1')

ocorrencias

"""# **Tratamento dos Dados**

  Utilizamos a base de dados acima onde foi realizado o tratamento de dados com o intuito de otimização onde abordaremos o estudo para este projeto.

  O tratamento de dados e filtros realizados tem por objetivo reduzir qualquer margem de erro ou desvio de estudo e visamos o maior grau de acertividade nos estudos elencados neste projeto. No entando, realizar a limpeza na base de dados auxilia na otimização do processamento dos gráficos.

## Observações e Variáveis

Desta forma a solicitação do estudo realizado com este ponto de vista, foi o tratamento sobre quais as observações encontram-se no arquivo fornecido para este projeto e a quantidade variáveis.
"""

ocorrencias.shape

print('Observação: ', ocorrencias.shape[0])
print('Varuáveis: ', ocorrencias.shape[1])

"""## Tipos de Dados

   Com isso, necessita-se que a equipe de desenvolvimento do projeto esteja ciente dos tipos de váriaveis do arquivo utilizado no trabalho, afim de obter maior aproveitamento no desenvolvimento na utilização das variáveis.

   Por isso, obteremos maior otimização na utilização no desenvolvimento,menor tempo para a criação de novas variáveis e melhor aproveitamento da base de dados.

"""

tipos_de_dados = pd.DataFrame(ocorrencias.dtypes, columns= ['Tipos de Dados'])

tipos_de_dados.columns.name = 'Variáveis'

tipos_de_dados

"""## Descrição das Ocorrências

  Segue abaixo a descrição do arquivo onde demonstra os valores e tipos das variáveis. Com isso, pode-se obter informação se a variável encontra-se preenchida.

  Sobretudo, a descrição das variáveis abaixo tem o papel fundamental por facilitar o processo de reaproveitamento dos dados no desenvolvimento do projeto.


"""

# Descrição dos tipos de variáveis
ocorrencias.info()

"""# Tipos de Acidentes

Os tipos de acidentes ocorridos ao longo dos anos, nos aeroportos do ``Brasil`` entre ``2010``  a  ``2019``.

O arquivo que foi fornecido contém vários tipos de ocorrências a longo dos anos fornecidos de ``2010`` até ``2019`` por todo o ``Brasil``, com isto foi feita um tratamento com os dados para descobrir quais tipos de ``acidentes``.

"""

# Base de Dados sem filtro Revisado dia 29112021
ocorrencias.head()

# Tipo de Ocorrencias
ocorrencias.tipo

tipos_acidentes = ocorrencias['tipo']

# Retirar os dados Duplicados afim de obter maior grau de acertividade nos estudos abordados no projeto.
tipos_acidentes.drop_duplicates(inplace= True)

"""## Organizando a Visualização dos Tipos de Acidentes

Nesta etapa foi encontrado três tipos de ocorrência dos acidentes de ``aeronaves`` por todo o ``Brasil``.

Realizamos a organização da visualização dos tipos de acidentes encontrados na base de dados. 

Nas ocorrências dos anos de ``2010`` até ``2019`` encontram-se três tipos de ``acidentes`` no ``Brasil``

"""

# Criação do DataFrame afim de apresentar a coluna com o tipo de Ocorrencias Revisado OK
tipos_acidentes = pd.DataFrame(tipos_acidentes)

tipos_acidentes.index = range(tipos_acidentes.shape[0])

tipos_acidentes.columns.name = 'id'

tipos_acidentes

"""## Seleção e Frequência dos Acidentes

Conforme estudo acima segue demonstração gráfica da ``seleção e frequência`` dos ``acidentes`` ocorridos no Brasil entre 2010 à 2019.
Com isso, podemos concluir a quantidade de ``acidentes`` ocorreu-se e o tipos de acidentes. Segue abaixo:

* ``Acidente``
* ``Incidente Grave``
* ``Incidente``

"""

# Tipos de Acidentes Revisado OK
ocorrencias.tipo.unique()

"""#### *Frequência de Acidente*

Com a mineração dedados desse arquivo conseguimos identificar a frequência de acidentes ocorridos entre ``2010`` à ``2019`` afim de obter um dos estudos encontrados conforme planilha de dados do CENIPA.


"""

# Levantamento por quantidade de tipos de ocorrencias
frequencia_de_acidentes = ocorrencias.tipo.value_counts()
frequencia_de_acidentes

# O gráfico utilizado tem por finalidade demonstrar a quantidade total de Incidente, Acidente e Incidente Grave.
y = frequencia_de_acidentes
plt.figure(figsize=(8,8))

rotulos = ['Incidente', 'Acidente', 'Incidente Grave']
size = frequencia_de_acidentes.value_counts
afastamento = [0.1, 0.1, 0.1]
cores = ['green', 'red', 'blue']
plt.pie(
    y, 
    labels=rotulos, 
    startangle=45, 
    explode=afastamento, 
    colors=cores
    )
plt.legend(y)
plt.show()

"""Análise de comparação conforme variação dos tipos de acidentes ocorridos entre 2010 e 2019 no Brasil, afim de obter a quantidade de tipos de ocorrencias que a organização chamada CENIPA registrou durante esses anos.

#### *Percentual dos Acidentes*

Estudo que visa encontrar o percentual onde referte-se a situação dos tipos de acidentes ocorridos conforme base de dados forneceida para este projeto.
"""

# Com o objetivo de identificar a totalidade das ocorrenciasno formato percentual
# afim obter outro ponto de vista e mensurar graficamente os acidentes ocorridos.
percentual_dos_acidentes = ocorrencias.tipo.value_counts(normalize = True) * 100
percentual_dos_acidentes

"""#### *Distinção de Frequência quantitativas*

Nesta parte descobrimos que no ocorrer dos anos ``2010`` até ``2019``, tivemos três ``tipos de Acidentes``.

Com isso sabemos a frequência e o percentual de cada tipo de Acidente que tiveram nesses anos que a ``CENIPA`` registrou.

Com esta base temos a real condição dos tipos de acidentes que ocorreram no meio ambiente da aviação.

"""

# Estudo que visa juntar a frequencia, ou seja, a quantidade total de acidentes 
# e mensurar o tamanho no formato percentual dos acidentes.
dist_freq_qualitativas = pd.DataFrame({'Frequência': frequencia_de_acidentes, 
                                       'Porcentagem (%)': percentual_dos_acidentes})
dist_freq_qualitativas.rename_axis('Tipos de Acidentes', axis = 'columns', inplace = True)
dist_freq_qualitativas

"""*Média de Acidentes*

Neste estudo através do filtro realizado conforme acima podemos mensurar a quantidade(frequência), porcentagem por tipos de acidentes ocorridos e por fim trazer o valor total da média de acidentes das ocorrencias entre os anos ``2010`` até ``2019`` que a ``CENIPA`` apurou.
"""

media_acidentes = ocorrencias.tipo.value_counts().mean()
media_acidentes

"""# Regiões dos Acidentes

Com base nos estudos abordados acima neste visamos identificar a quantidade de ``acidentes`` ocorridos nos Estados do pais. 


"""

ocorrencias.head()

ocorrencias.estado

estados_ocorrencia = ocorrencias['estado']

estados_ocorrencia.drop_duplicates(inplace = True)

"""## Organizando as Visualização das Regiões dos Acidentes

Com a conclusão que chegarão com este resultado no desenvolvimento com este arquivo.
"""

estados_ocorrencia = pd.DataFrame(estados_ocorrencia)

estados_ocorrencia.index = range(estados_ocorrencia.shape[0])

estados_ocorrencia.columns.name = 'id'

estados_ocorrencia

estados_ocorrencia.shape

"""## Seleções e Frequências dos Acidentes de Cada Região


Com base nos estudos abordados acima neste visamos identificar a quantidade de acidentes ocorridos nos Estados do pais.

Contudo, com esse estudo que abrange todos Estados brasileiros onde se realiza os filtros cujo intuito busca apresentar abordagem para cada item estatístico conforme apresentaremos no projeto.

### Quantidade de Ocorrências por Tipos de Acidentes em Cada Estado

Identificou-se conforme análise obtida a quantidade de ``Ocorrências`` sucedidas entre os 27 estados os três tipos de ``Acidentes``:

*	`` ACIDENTE``

*	``INCIDENTE``

*	``INCIDENTE GRAVE``
"""

# Quantidade de Ocorrencias por Estado entre 2010 à 2019
estados_frequencia = pd.crosstab(ocorrencias['estado'], ocorrencias['tipo'])
estados_frequencia

"""## Revisado 28112021 às 23:37
*Percentual de Cada Estado Por Tipos Acidente*

Podemos apurar neste estudo o ``percentual dos Acidentes`` por ``Estado`` entre  ``2010 à 2019`` com intuito de identificar os Estados com maior e menor grau ocorrencias ocorridas por tipos de acidentes distintos, afim de criar estratégias de segurança e diminuição de acidentes.


"""

# O percentual das Ocorrencias por Estado entre 2010 à 2019 
estados_percentual = pd.crosstab(ocorrencias['estado'],
                      ocorrencias['tipo'],
                      normalize = True) * 100
estados_percentual.round(2)

"""#### *Histograma Demonstrando as Frequências dos Acidentes*
<!-- ## Revisado 29112021 às 19:08-->

Neste Histograma demonstraremos os acidentes e o  comportamento entre ``2010`` à ``2019``. Podemos dizer que a linha esteja levemente Assimétrica à direita na demonstração dos tipos de acidentes. 

"""

est = sns.distplot(estados_frequencia)
est.figure.set_size_inches(12, 6)
est.set_title('Histograma de Frequência dos Acidentes', fontsize=16)
est

"""Constatamos que no gráfico acima utilizamos o histograma afim de demonstrar o comportamento dos dados encontrados no arquivo do CENIPA que avalia entre 2010 à 2019.

Com base no estudo realizado identificamos que o histograma nos informa que o comportamento dos dados são levemente assimetricos a direita.

#### *Moda*

A moda é o valor que mais tem frequência no que está sendo aplicado. No caso dessa aplicação está sendo verificado qual o valor que está frequentemente se repetindo em cada tipos de acidentes que foi ocorrido.
"""

moda_estados = estados_frequencia.mode()
moda_estados

"""#### *Mediana*

A Mediana e a ocorrência que está no centro de cada tipo de Acidentes.

Com base nos dados tivemos estes resultados:

"""

mediana_estados = estados_frequencia.median()
mediana_estados

"""#### *Média*

A média e o cálculo que aplicamos para verificar qual e a média de cada tipo de Acidente, com base no total de cada tipo de Acidente que foi totalizado no ocorrer dos anos ``2010`` ate ``2019``.
"""

media_estados = estados_frequencia.mean()
media_estados.round(2)

"""### *Medidas de Dispersão*

*Desvio Médio*

 Com a média obtida com a verificação do total de cada tipo de acidente. Começamos a fazer o desvio de média por cada estado, para conseguir a média absoluta, para que tenha um maior acerto e conhecimento do desvio médio de cada estado para verificar a média total de cada tipo de Acidente.

*Desvio Média Absoluto de Acidente*

Com isto fizemos o aprofundamento de cada Acidente por estado em ``2010`` até ``2019``. Para obter o resultado do desvio médio dos Acidente por estado.
"""

estados_por_acidente = estados_frequencia[['ACIDENTE']]
estados_por_acidente

media_acidente = estados_por_acidente.mean()[0]
media_acidente

estados_por_acidente['Desvio'] = estados_por_acidente['ACIDENTE'] - media_acidente
estados_por_acidente

estados_por_acidente['|Desvio|'] = estados_por_acidente['Desvio'].abs()
estados_por_acidente

"""*Desvio Médio por estado dos Acidente*

Com isto fizemos uma demonstração de quanto e o desvio de cada estado para chegar na média absoluta por Acidente.
"""

ma = estados_por_acidente['ACIDENTE'].plot(style = 'o')
ma.figure.set_size_inches(14, 6)
ma.set_title('Disvio Médio de Acidente', fontsize=16)
ma.set_xlabel('Estados', fontsize=14)
ma.hlines(y = media_acidente, xmin = 0, xmax = estados_por_acidente.shape[0] - 1, colors = 'red')
for i in range(estados_por_acidente.shape[0]):
    ma.vlines(x = i, ymin = media_acidente, ymax = estados_por_acidente['ACIDENTE'][i], linestyle='dashed')
ma

"""Constatamos que no gráfico acima apresentado aborda o estudo do desvio médio para obter o desvio médio absoluto por Estado.

O Desvio absoluto denomina-se por aprofundar o desvio médio mais assertivo possível. Com isso, podemos afirmar que o estudo informa o desvio médio por ``estado`` e outro para identificar o desvio medio absoluto das ocorrencias dos ``acidentes``.

*Resultado da Média Absoluta Obtida por Acidente*

Foi feita duas verificação para obter a Média Absoluto dos Acidente.
"""

estados_por_acidente['|Desvio|'].mean()

desvio_medio_absoluto_acidente = estados_por_acidente['ACIDENTE'].mad()
desvio_medio_absoluto_acidente

"""#### *Variância*"""

estados_por_acidente['(Desvio)^2'] = estados_por_acidente['Desvio'].pow(2)
estados_por_acidente

estados_por_acidente['(Desvio)^2'].sum() / (len(estados_por_acidente) - 1)

variancia_acidente = estados_por_acidente['ACIDENTE'].var()
variancia_acidente

"""##### *Desvio Padrão*"""

desvio_padrao_acidente = np.sqrt(variancia_acidente)
desvio_padrao_acidente

desvio_padrao_acidente = estados_por_acidente.std()
desvio_padrao_acidente

"""*Desvio Média Absoluto de Incidente*

Com isto fizemos o aprofundamento de cada Incidente por estado em ``2010`` até ``2019``. Para obter o resultado do desvio médio dos Incidente por estado.
"""

estados_por_incidente = estados_frequencia[['INCIDENTE']]
estados_por_incidente

media_incidente = estados_por_incidente.mean()[0]
media_incidente

estados_por_incidente['Desvio'] = estados_por_incidente['INCIDENTE'] - media_incidente
estados_por_incidente

estados_por_incidente['|Desvio|'] = estados_por_incidente['Desvio'].abs()
estados_por_incidente

"""*Desvio Médio por estado dos Incidente*

Com isto fizemos uma demonstração de quanto e o desvio de cada estado para chegar na média absoluta por Incidente.

"""

mi = estados_por_incidente['INCIDENTE'].plot(style = 'o')
mi.figure.set_size_inches(14, 6)
mi.set_title('Disvio Médio de Incidente', fontsize=16)
mi.set_xlabel('Estados', fontsize=14)
mi.hlines(y = media_incidente, xmin = 0, xmax = estados_por_incidente.shape[0] - 1, colors = 'red')
for i in range(estados_por_incidente.shape[0]):
    mi.vlines(x = i, ymin = media_incidente, ymax = estados_por_incidente['INCIDENTE'][i], linestyle='dashed')
mi

"""Constatamos que no gráfico acima apresentado aborda o estudo do desvio médio de ``incidentes`` para obter o desvio médio absoluto por ``Estado``.

Conforme estudo realizado neste gráfico identificamos o mapeamento do desvio médio de todas as ocorrencias de ``incidentes`` por estado e para demonstrar qual a distancia para chegar ao desvio médio absoluto.

*Resultado da Media Absoluto Obtida por Incidente*

Foi feita duas verificação para obter a Média Absoluta dos Incidente.
"""

estados_por_incidente['|Desvio|'].mean()

desvio_medio_absoluto_incidente = estados_por_incidente['INCIDENTE'].mad()
desvio_medio_absoluto_incidente

"""#### *Variância*"""

estados_por_incidente['(Desvio)^2'] = estados_por_incidente['Desvio'].pow(2)
estados_por_incidente

estados_por_incidente['(Desvio)^2'].sum() / (len(estados_por_incidente) - 1)

variancia_incidente = estados_por_incidente['INCIDENTE'].var()
variancia_incidente

"""##### *Desvio Padrão*"""

# Desvio Padrão com base em todos os Incedentes
desvio_padrao_incidente = np.sqrt(variancia_incidente)
desvio_padrao_incidente

desvio_padrao_incidente = estados_por_incidente.std()
desvio_padrao_incidente

"""*Desvio Média Absoluto de Incidente Grave*

Com isto fizemos o aprofundamento de cada Incidente Grave por estado em ``2010`` até ``2019``. Para obter o resultado do desvio médio dos Incidente Grave por estado.

"""

estados_por_incidente_grave = estados_frequencia[['INCIDENTE GRAVE']]
estados_por_incidente_grave

# Media total dos incidentes graves x Estados 
media_incidente_grave = estados_por_incidente_grave.mean()[0]
media_incidente_grave

#  Calculo do Desvio médio por estados e incidentes graves demonstrados no grafico abaixo onde utilizamos o calculo acima afim chegar a este resultado, conforme abaixo
estados_por_incidente_grave['Desvio'] = estados_por_incidente_grave['INCIDENTE GRAVE'] - media_incidente_grave
estados_por_incidente_grave

#  Remoção dos valores negativos devido o desvio medio obter somente valores positivos e que possamos calcular de forma correta.
estados_por_incidente_grave['|Desvio|'] = estados_por_incidente_grave['Desvio'].abs()
estados_por_incidente_grave

"""*Desvio Médio por estado dos Incidente Grave*

Com isto fizemos uma demonstração de quanto e o desvio de cada estado para chegar na média absoluta por Incidente Grave.

"""

mig = estados_por_incidente_grave['INCIDENTE GRAVE'].plot(style = 'o')
mig.figure.set_size_inches(14, 6)
mig.set_title('Disvio Médio Incidente Grave', fontsize=16)
mig.set_xlabel('Estados', fontsize=14)
mig.hlines(y = media_incidente_grave, xmin = 0, xmax = estados_por_incidente_grave.shape[0] - 1, colors = 'red')
for i in range(estados_por_incidente.shape[0]):
    mig.vlines(x = i, ymin = media_incidente_grave, ymax = estados_por_incidente_grave['INCIDENTE GRAVE'][i], linestyle='dashed')
mig

"""Temos por objetivo nesta terceira etapa da analise idenficar a distancia do desvio medio das ocorrencias de ``incidentes graves``onde se ocorre no pais entre 2010 à 2019, visa-se monstrar e comparar com base nos estudos de desvios.

*Resultado da Media Absoluto Obtida por Incidente Grave*

Foi feita duas verificação para obter a Média Absoluta dos Incidente Grave.
"""

estados_por_incidente_grave['|Desvio|'].mean()

desvio_medio_absoluto_incidente_grave = estados_por_incidente_grave['INCIDENTE GRAVE'].mad()
desvio_medio_absoluto_incidente_grave

"""#### *Variância*"""

estados_por_incidente_grave['(Desvio)^2'] = estados_por_incidente_grave['Desvio'].pow(2)
estados_por_incidente_grave

estados_por_incidente_grave['(Desvio)^2'].sum() / (len(estados_por_incidente_grave) - 1)

variancia_incidente_grave = estados_por_incidente_grave['INCIDENTE GRAVE'].var()
variancia_incidente_grave

"""##### *Desvio Padrão*"""

desvio_padrao_incidente_grave = np.sqrt(variancia_incidente_grave)
desvio_padrao_incidente_grave

desvio_padrao_acidente_grave = estados_por_incidente_grave.std()
desvio_padrao_acidente_grave

"""### *Medidas Separatrizes dos Estados Por Frequência de Acidente*

#### *Quartis, decis e percentis*

Fizemos as mediadas com a dispersão por ``25%``, ``50%`` e ``75%`` por cada Tipo de Acidentes.

Para obter os valores de cada tipo de acidente:
"""

quartis_estados = estados_frequencia.quantile([0.25, 0.5, 0.75])
quartis_estados

est1_1 = sns.boxplot( x = 'ACIDENTE', data = estados_frequencia, orient = 'h')
est1_1.figure.set_size_inches(10, 3)
est1_1.set_title('Acidente', fontsize=18)
est1_1.set_xlabel('Qunatidade de Acidente', fontsize=14)
est1_1

"""Este grafico acima demonstra os ``acidentes`` são assimétricos a ``direita``.

"""

est2_1 = sns.boxplot( x = 'INCIDENTE', data = estados_frequencia, orient = 'h')
est2_1.figure.set_size_inches(10, 3)
est2_1.set_title('Incidente', fontsize=18)
est2_1.set_xlabel('Qunatidade de Acidente', fontsize=14)
est2_1

"""O segundo estudo apresentado conforme grafico acima demonstra os ``incidentes`` são assimétricos a ``direita``."""

est3_1 = sns.boxplot( x = 'INCIDENTE GRAVE', data = estados_frequencia, orient = 'h')
est3_1.figure.set_size_inches(10, 3)
est3_1.set_title('Incidente Grave', fontsize=18)
est3_1.set_xlabel('Qunatidade de Acidente', fontsize=14)
est3_1

"""Neste ``terceiro`` estudo apresentado conforme grafico acima demonstra que os ``incidentes graves`` encontram-se assimétricamente a direita com a visualização mais clara.

#### *Demonstração de Distribuição de frequência Acumulada por Acidente*

Com base nos dados que foram obtidos por Acidente, com isto tivemos como verificar o comportamento de frequência que tiveram entre ``2010`` a ``2019``.
"""

est1 = sns.distplot(estados_frequencia['ACIDENTE'], 
                  hist_kws = {'cumulative': True},
                  kde_kws = {'cumulative': True},
                  bins = 10) 
est1.figure.set_size_inches(14, 6)
est1.set_title('Distribuição de Frequência Acumulada', fontsize=18)
est1.set_ylabel('Acumulado', fontsize=14)
est1.set_xlabel('Acidentes', fontsize=14)
est1

"""O estudo acima tem por objetivo verificar a evolução gradativa de todas as ocorrencias de acidentes constatados entre 2010 à 2019.
Com base neste grafico podemos afirmar que o total de ocorrencias de acidentes encontram-se próximos a 400 ocorrencias de acidentes.

#### *Demonstração de Distribuição de frequência Acumulada por Incidente*

Com base nos dados que foram obtidos por Incidente, com isto tivemos como verificar o comportamento de frequência que tiveram entre ``2010`` a ``2019``.
"""

est2 = sns.distplot(estados_frequencia['INCIDENTE'], 
                  hist_kws = {'cumulative': True},
                  kde_kws = {'cumulative': True},
                  bins = 10) 
est2.figure.set_size_inches(14, 6)
est2.set_title('Distribuição de Frequência Acumulada', fontsize=18)
est2.set_ylabel('Acumulado', fontsize=14)
est2.set_xlabel('Incidente', fontsize=14)
est2

"""O estudo acima tem por objetivo verificar a evolução acima do esperado de todas as ocorrencias de incidentes constatados entre 2010 à 2019.
Com base neste grafico podemos afirmar que o total de ocorrencias de incidentes encontram-se próximos a 800 ocorrencias de incidentes.

#### *Demonstração de Distribuição de frequência Acumulada por Incidente Grave*

Com base nos dados que foram obtidos por Incidente Grave, com isto tivemos como verificar o comportamento de frequência que tiveram entre ``2010`` a ``2019``.
"""

est3 = sns.distplot(estados_frequencia['INCIDENTE GRAVE'], 
                  hist_kws = {'cumulative': True},
                  kde_kws = {'cumulative': True},
                  bins = 10) 
est3.figure.set_size_inches(14, 6)
est3.set_title('Distribuição de Frequência Acumulada', fontsize=18)
est3.set_ylabel('Acumulado', fontsize=14)
est3.set_xlabel('Incidente Grave', fontsize=14)
est3

"""O estudo acima tem por objetivo verificar a evolução acima do esperado de todas as ocorrencias de ``incidentes graves`` constatados entre ``2010 à 2019``.
Com base neste grafico podemos afirmar que o total de ``ocorrencias de incidentes graves`` encontram-se próximos a 125 ``ocorrencias de incidentes graves``.

Com base nos ``três`` estudos elencados podemos afirmar que acidentes e incedentes tem maior porcentagem de ocorrencias entre 2010 à 2019 e os incidentes graves obtém a porcentagem menor. Mas as ocorrencias de incedentes graves e indicentes tem o indice acima da média de evolução percorrido entre 2010 à 2019.
"""

estados_frequencia.quantile([i / 10 for i in range(1, 10)])

"""Representação grafica dos níveis de disperção de Frequencia acumulo."""

estados_frequencia.describe().round(2)

"""#### *Regreção Linear dos Tipos de Acitentes por Estado*

###### Gráficos de Dispersão Entre os Acidentes por Estado
"""

estados_frequencia.corr().round(4)

ax = sns.pairplot(estados_frequencia)
ax.fig.suptitle('Dispersão entre as Variaveis', fontsize=20, y=1.09)
ax

"""O grafico acima representa a analise da dispersão das variavais com base no comportamento e comparação entre as variáveis. Podemos identificar que os incidentes obtém maior dispersão entre as variáveis. No entanto os acidentes e incidentes gaves obtem pouco variância entre as variáveis.

*Acidente x Incidente*
"""

ax = sns.jointplot(x='ACIDENTE', y='INCIDENTE', data=estados_frequencia, kind='reg')
ax.fig.suptitle('Dispersão - Acidente X Incidente', fontsize=18, y=1.05)
ax.set_axis_labels("Acidentes", "Incidente", fontsize=14)
ax

"""O gráfico acima representa a analise da Regressão Linear com base no comportamento dos incidentes e acidentes, comparação entre as variáveis e desmonstrando o comportamento do histograma.
Podemos identificar que o comportamento são similares.

*Acidente x Incidente Grave*
"""

ax = sns.jointplot(x='ACIDENTE', y='INCIDENTE GRAVE', data=estados_frequencia, kind='reg')
ax.fig.suptitle('Dispersão - Acidente X Incidente Grave', fontsize=18, y=1.05)
ax.set_axis_labels("Acidentes", "Incidente Grave", fontsize=14)
ax

"""O gráfico acima representa a analise da Regressão Linear com base no comportamento dos incidentes graves e Incidentes, comparação entre as variáveis e desmonstrando o comportamento do histograma.
Podemos identificar que o comportamento da regressão linear são mais próximas, ou seja, obtem maior divergencia de comportamento.

*Incidente x Incidente Grave*
"""

ax = sns.jointplot(x='INCIDENTE', y='INCIDENTE GRAVE', data=estados_frequencia, kind='reg')
ax.fig.suptitle('Dispersão - Incidente X Incidente Grave', fontsize=18, y=1.05)
ax.set_axis_labels("Incidentes", "Incidente Grave", fontsize=14)
ax

"""O gráfico acima representa a analise da Regressão Linear com base no comportamento dos incidentes e incidentes graves, comparação entre as variáveis e desmonstrando o comportamento do histograma.
Com base na regressão linear podemos afirmar que ambos obtém um acréscimo de evolução de ocorrencias fora do esperado.

# Quantidade de Ocorrências por Tipos de Aeronaves e os Níveis dos Acidentes

Nesta parte do processo da análise foi para descobrir quais tipos de aeronaves teve em cada nível de ``Ocorrências``.

Para determinar em tornos dos anos de ``2010`` até ``2019``, quais tipos de aeronaves teve com mais frequências.
"""

# Quantidade acidentes por tipos de aviões
aeronaves_frequencia = pd.crosstab(ocorrencias['aeronave_tipo'], ocorrencias['tipo'])
aeronaves_frequencia

aeronaves_percentual = pd.crosstab(ocorrencias['aeronave_tipo'],
                      ocorrencias['tipo'],
                      normalize = True) * 100
aeronaves_percentual.round(2)

aer = sns.distplot(aeronaves_frequencia)
aer.figure.set_size_inches(12, 6)
aer.set_title('Histograma de Frequência dos Aeronaves', fontsize=16)
aer

"""Com base no estudo do histograma apresentado acima que se por objetivo demonstrar o comportamento das aeronaves e os tipos de acidentes onde identifcamos o  omportamento simétrico.

##### *Moda*
"""

moda_aeronaves = aeronaves_frequencia.mode()
moda_aeronaves

"""##### *Mediana*"""

mediana_aeronaves = aeronaves_frequencia.median()
mediana_aeronaves.round(2)

"""##### *Média*"""

media_aeronaves = aeronaves_frequencia.mean()
media_aeronaves.round(2)

"""##### *Medidas de Dispersão*

###### *Desvio Médio*

*Desvio Média Absoluto de Acidente*
"""

aeronaves_por_acidente = aeronaves_frequencia[['ACIDENTE']]
aeronaves_por_acidente

media_acidente_aeronave = aeronaves_por_acidente.mean()[0]
media_acidente_aeronave

aeronaves_por_acidente['Desvio'] = aeronaves_por_acidente['ACIDENTE'] - media_acidente_aeronave
aeronaves_por_acidente

aeronaves_por_acidente['|Desvio|'] = aeronaves_por_acidente['Desvio'].abs()
aeronaves_por_acidente

"""*Desvio Médio por Aeronaves com base nas ocorrencias de Acidentes*

"""

maa = aeronaves_por_acidente['ACIDENTE'].plot(style = 'o')
maa.figure.set_size_inches(14, 6)
maa.set_title('Disvio Médio Acidente', fontsize=16)
maa.set_xlabel('Aeronaves', fontsize=14)
maa.hlines(y = media_acidente_aeronave, xmin = 0, xmax = aeronaves_por_acidente.shape[0] - 1, colors = 'red')
for i in range(aeronaves_por_acidente.shape[0]):
    maa.vlines(x = i, ymin = media_acidente_aeronave, ymax = aeronaves_por_acidente['ACIDENTE'][i], linestyle='dashed')
maa

"""O estudo do gáfico se refere ao ``desvio medio dos tipos de aeronaves por acidentes envolvidas nos tipos de ocorrencias`` conforme demonstração acima.
A evidência se refere a distancia do desvio padrão por tipo de aeronave onde podemos afirmar com base no estudo realizado que parte dos tipos de aeronaves apresenta distância acima do esperado.

*Resultado da Media Absoluto Obtida por Acidente*
"""

aeronaves_por_acidente['|Desvio|'].mean()

desvio_medio_absoluto_aeronaves_acidente = aeronaves_por_acidente['ACIDENTE'].mad()
desvio_medio_absoluto_aeronaves_acidente

"""##### *Variância*"""

aeronaves_por_acidente['(Desvio)^2'] = aeronaves_por_acidente['Desvio'].pow(2)
aeronaves_por_acidente

aeronaves_por_acidente['(Desvio)^2'].sum() / (len(aeronaves_por_acidente) - 1)

variancia_aeronaves_acidente = aeronaves_por_acidente['ACIDENTE'].var()
variancia_aeronaves_acidente

"""##### *Desvio Padrão*"""

desvio_padrao_acidente_aeronaves = np.sqrt(variancia_aeronaves_acidente)
desvio_padrao_acidente_aeronaves

desvio_padrao_acidente_aeronave = aeronaves_por_acidente.std()
desvio_padrao_acidente_aeronave

"""*Desvio Média Absoluto de Incidente*"""

aeronaves_por_incidente = aeronaves_frequencia[['INCIDENTE']]
aeronaves_por_incidente

media_incidente_aeronave = aeronaves_por_incidente.mean()[0]
media_incidente_aeronave

aeronaves_por_incidente['Desvio'] = aeronaves_por_incidente['INCIDENTE'] - media_incidente_aeronave
aeronaves_por_incidente

aeronaves_por_incidente['|Desvio|'] = aeronaves_por_incidente['Desvio'].abs()
aeronaves_por_incidente

"""*Desvio Médio por Aeronaves dos Incidente*"""

mai = aeronaves_por_incidente['INCIDENTE'].plot(style = 'o')
mai.figure.set_size_inches(14, 6)
mai.set_title('Desvio Médio de Incidente', fontsize=16)
mai.set_xlabel('Aeronaves', fontsize=14)
mai.hlines(y = media_incidente_aeronave, xmin = 0, xmax = aeronaves_por_incidente.shape[0] - 1, colors = 'red')
for i in range(aeronaves_por_incidente.shape[0]):
    mai.vlines(x = i, ymin = media_incidente_aeronave, ymax = aeronaves_por_incidente['INCIDENTE'][i], linestyle='dashed')
mai

"""O estudo do gáfico se refere ao desvio medio dos tipos de aeronaves por ``incidentes`` envolvidas nos tipos de ocorrencias conforme demonstração acima.

   A evidência se refere a distancia do desvio padrão por tipo de aeronave onde podemos afirmar com base no estudo realizado que a maior parte dos tipos de aeronaves apresenta um padrão de distância semelhante.

*Resultado da Media Absoluto Obtida por Incidente*
"""

aeronaves_por_incidente['|Desvio|'].mean()

desvio_medio_absoluto_aeronaves_incidente = aeronaves_por_incidente['INCIDENTE'].mad()
desvio_medio_absoluto_aeronaves_incidente

"""##### *Variância*"""

aeronaves_por_incidente['(Desvio)^2'] = aeronaves_por_incidente['Desvio'].pow(2)
aeronaves_por_incidente

aeronaves_por_incidente['(Desvio)^2'].sum() / (len(aeronaves_por_incidente) - 1)

variancia_aeronaves_incidente = aeronaves_por_incidente['INCIDENTE'].var()
variancia_aeronaves_incidente

""" *Desvio Padrão*"""

desvio_padrao_incidente_aeronaves = np.sqrt(variancia_aeronaves_incidente)
desvio_padrao_incidente_aeronaves

desvio_padrao_incidente_aeronave = aeronaves_por_incidente.std()
desvio_padrao_incidente_aeronave

"""*Desvio Média Absoluto de Incidente Grave*"""

aeronaves_por_incidente_grave = aeronaves_frequencia[['INCIDENTE GRAVE']]
aeronaves_por_incidente_grave

media_incidente_grave_aeronave = aeronaves_por_incidente_grave.mean()[0]
media_incidente_grave_aeronave

aeronaves_por_incidente_grave['Desvio'] = aeronaves_por_incidente_grave['INCIDENTE GRAVE'] - media_incidente_grave_aeronave
aeronaves_por_incidente_grave

aeronaves_por_incidente_grave['|Desvio|'] = aeronaves_por_incidente_grave['Desvio'].abs()
aeronaves_por_incidente_grave

"""*Desvio Médio por Aeronaves dos Incidente Grave*"""

maig = aeronaves_por_incidente_grave['INCIDENTE GRAVE'].plot(style = 'o')
maig.figure.set_size_inches(14, 6)
maig.set_title('Desvio Médio de Incidentes Graves', fontsize=16)
maig.set_xlabel('Aeronaves', fontsize=14)
maig.hlines(y = media_incidente_grave_aeronave,
            xmin = 0, xmax = aeronaves_por_incidente_grave.shape[0] - 1,
            colors = 'red')
for i in range(aeronaves_por_incidente_grave.shape[0]):
    maig.vlines(x = i, ymin = media_incidente_grave_aeronave,
                ymax = aeronaves_por_incidente_grave['INCIDENTE GRAVE'][i],
                linestyle='dashed')
maig

"""O estudo conforme gráfico acima tem por objetivo identificar o desvio médio dos tipos de aeronaves por ``incidentes graves`` envolvidas nos tipos de ocorrências.

  Concluímos que a distância do desvio padrão com base nos tipos de aeronaves podemos dizer que a maior parte apresenta um comportamento de distâncias semelhantes.

*Resultado da Media Absoluto Obtida por Incidente Grave*
"""

aeronaves_por_incidente_grave['|Desvio|'].mean()

desvio_medio_absoluto_aeronaves_incidente_grave = aeronaves_por_incidente_grave['INCIDENTE GRAVE'].mad()
desvio_medio_absoluto_aeronaves_incidente_grave

""" *Variância*"""

aeronaves_por_incidente_grave['(Desvio)^2'] = aeronaves_por_incidente_grave['Desvio'].pow(2)
aeronaves_por_incidente_grave

aeronaves_por_incidente_grave['(Desvio)^2'].sum() / (len(aeronaves_por_incidente_grave) - 1)

variancia_aeronaves_incidente_grave = aeronaves_por_incidente_grave['INCIDENTE GRAVE'].var()
variancia_aeronaves_incidente_grave

"""*Desvio Padrão*"""

desvio_padrao_incidente_grave_aeronaves = np.sqrt(variancia_aeronaves_incidente_grave)
desvio_padrao_incidente_grave_aeronaves

desvio_padrao_incidente_grave_aeronave = aeronaves_por_incidente_grave.std()
desvio_padrao_incidente_grave_aeronave

"""#### *Quartis, decis e percentis*

Segue demostração das medidas com a dispersão por ``25%``, ``50%`` e ``75%`` por cada Tipo de aeronaves.

Para obter os valores de cada tipo de aeronaves:
"""

quartis_aeronaves = aeronaves_frequencia.quantile([0.25, 0.5, 0.75])
quartis_aeronaves

qa1 = sns.boxplot( x = 'ACIDENTE', data = aeronaves_frequencia, orient = 'h')
qa1.figure.set_size_inches(10, 3)
qa1.set_title('Acidente', fontsize=18)
qa1.set_xlabel('Quantidade de Acidente', fontsize=14)
qa1

"""O estudo acima do gráfico acima  visa a confirmar os quartis, decis e percentis onde apresenta o comportamento ``assimétrico a direita``."""

qa2 = sns.boxplot( x = 'INCIDENTE', data = aeronaves_frequencia, orient = 'h')
qa2.figure.set_size_inches(10, 3)
qa2.set_title('Incidente', fontsize=18)
qa2.set_xlabel('Quantidade de Acidente', fontsize=14)
qa2

"""Neste estudo utilizamos análise da pesquisa anterior afim de obter os seguintes resultados:

As ocorrências de ``incidentes`` apresenta um comportamento compacto que dificulta a determinação se o parametro corresponde a ``assimétrico`` a ``direita``,``assimétrico`` a ``esquerda`` ou ``assimétrico``.
"""

qa3 = sns.boxplot( x = 'INCIDENTE GRAVE', data = aeronaves_frequencia, orient = 'h')
qa3.figure.set_size_inches(10, 3)
qa3.set_title('Incidente Grave', fontsize=18)
qa3.set_xlabel('Qunatidade de Acidente', fontsize=14)
qa3

"""Podemos afimar com base no estudo do terceiro gráfico conforme acima onde se determina o comportamento assimétrico a direita. ``Com isso, se evidencia que o Q1 e a mediana obtém um comportamento similar.``

#### *Regreção Linear dos Tipos de Aeronaves por Acidente*

*Gráficos de Dispersão Entre Aeronaves por Acidentes*
"""

# Estudo das três ocorrencias por aeronaves
ax = sns.pairplot(aeronaves_frequencia)
ax.fig.suptitle('Dispersão entre as Variaveis', fontsize=20, y=1.09)
ax

"""O gráfico acima é composto por 9 estudos combinando os três tipos de ocorrencias por aeronaves onde pode-se observar a variação entre o comportamento dos tipos de ocorrencias e aeronaves.

*Acidente x Incidente*
"""

ax = sns.jointplot(x='ACIDENTE', y='INCIDENTE', data=aeronaves_frequencia, kind='reg')
ax.fig.suptitle('Dispersão - Incidente X Incidente Grave', fontsize=18, y=1.05)
ax.set_axis_labels("Incidentes", "Incidente Grave", fontsize=14)
ax

"""Avalia-se esse gráfico de regressão linear com o histograma onde elencamos a dispersão entre incidentes por incidentes graves. 

Com isso, podemos determinar o comportamento da regressão linear e a medida de dispersão entre o ligamento da linha entre os ponto. Contudo, a ``linha azul clara`` da dispersão prova o traçado mais aberto para baixo entre os dois tipos de ocorrencias. A linha azul escura tem o alinhamento voltado para cima com a representação da dispersão da linha azul clara.

*Acidente x Incidente Grave*
"""

ax = sns.jointplot(x='ACIDENTE', y='INCIDENTE GRAVE', data=aeronaves_frequencia, kind='reg')
ax.fig.suptitle('Dispersão - Acidente X Incidente Grave', fontsize=18, y=1.05)
ax.set_axis_labels("Acidentes", "Incidente Grave", fontsize=14)
ax

"""Avalia-se esse gráfico de regressão linear com o histograma onde elencamos a dispersão entre acidentes e incidente Graves.

Com isso, podemos determinar o comportamento da regressão linear e a medida de dispersão entre o ligamento da linha entre os ponto. Contudo, a linha azul clara da dispersão media para baixo onde resulta o comportamento assimétrico entre as variáveis. A linha azul escura tem o alinhamento voltado para cima com a representação da dispersão da linha azul clara.

*Incidente x Incidente Grave*
"""

ax = sns.jointplot(x='INCIDENTE', y='INCIDENTE GRAVE', data=aeronaves_frequencia, kind='reg')
ax.fig.suptitle('Dispersão - Incidente X Incidente Grave', fontsize=18, y=1.05)
ax.set_axis_labels("Incidentes", "Incidente Grave", fontsize=14)
ax

"""Avalia-se esse gráfico de regressão linear com o histograma onde elencamos a dispersão entre acidentes e incidente Graves.

Com isso, podemos determinar o comportamento da regressão linear e a medida de dispersão entre o ligamento da linha entre os ponto. Contudo, a linha azul clara da dispersão media para baixo onde resulta o comportamento assimétrico entre as variáveis. A linha azul escura tem o alinhamento voltado para baixo com a representação da dispersão da linha azul clara.
"""

aeronaves_frequencia.describe().round(2)

"""# Quais São as Variações de Aeronaves com Cada Tipo de Motor que Ocorrerão nas Ocorrências

Neste ponto teve que ver os tipos de motor que as aeronaves teve mais ``ocorrências``.

"""

# Estudo realiado com base na quantidade de areronaves por tipos de motores
frequencia_motores_de_aeronaves = pd.crosstab(ocorrencias['aeronave_tipo'], ocorrencias['motor_tipo'])
frequencia_motores_de_aeronaves

percentual_motores_de_aeronaves = pd.crosstab(ocorrencias['aeronave_tipo'],
                      ocorrencias['motor_tipo'],
                      normalize = True) * 100
percentual_motores_de_aeronaves.round(2)

ax = sns.distplot(frequencia_motores_de_aeronaves)
ax.figure.set_size_inches(12, 6)
ax.set_title('Histograma de Frequência de Motores', fontsize=16)
ax

"""O estudo do histograma apresentado conforme acima, tem por objetivo demonstrar a variação dos motores das aeronaves envolvidas nas ocorrências.

Tendo o comportamento simétrico conforme evolução das ocorrências entre 2010 à 2019.

###### Moda
"""

moda_motores_de_aeronaves = frequencia_motores_de_aeronaves.mode()
moda_motores_de_aeronaves

"""###### Mediana"""

mediana_motores_de_aeronaves = frequencia_motores_de_aeronaves.median()
mediana_motores_de_aeronaves

"""###### Média"""

media_motores_de_aeronaves = frequencia_motores_de_aeronaves.mean()
media_motores_de_aeronaves

"""###### Medidas de Dispersão"""

desvio_medio_motores = frequencia_motores_de_aeronaves.mad()
desvio_medio_motores

"""*Desvio Padrão*"""

desvio_padrao_motores = np.sqrt(desvio_medio_motores)
desvio_padrao_motores

"""#### *Quartis, decis e percentis*

Fizemos as mediadas com a dispersão por ``25%``, ``50%`` e ``75%`` por cada Tipo de motor.

Para obter os valores de cada tipo de motor:
"""

quartis_motores = frequencia_motores_de_aeronaves.quantile([0.25, 0.5, 0.75])
quartis_motores

ax = sns.boxplot(data = frequencia_motores_de_aeronaves, orient = 'o')
ax.figure.set_size_inches(10, 3)
ax.set_title('Motores', fontsize=18)
ax.set_xlabel('Qunatidade de Motores', fontsize=14)
ax

"""O estudo acima tem por intuito detalhar os tipos de motores com base na separação dos quartis, decis e percentis. 
Com isso, descobrimos a varição dos motores onde se apresenta o comportamento mais compacto com base na distribuição dos quartis, decis e percentis. Sobretudo, conseguimos elencar a maior visualização por tipo de motor.

#### *Regreção Linear dos Tipos de Motores de Aeronave*

*Gráficos de Dispersão Entre os Motores de Aeronaves*
"""

ax = sns.pairplot(frequencia_motores_de_aeronaves, y_vars='TURBOÉLICE',
                  x_vars=['INDETERMINADO', 'JATO', 'PISTÃO', 'SEM TRAÇÃO', 'TURBOEIXO', 'TURBOÉLICE'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Turboélice', fontsize=20, y=1.09)
ax

"""
Neste estudo de regressão linear mais apurado visa realizar a compração dos tipos de motores dado a variação de comportamento do motor turboélice, onde pode-se afirmar que os tipos de motores neste estudo tem por objetivo verificar o comportamento apontado nos três tipos de ocorrências. Contudo, o estudo demonstra qual motor que se adepta melhor as ocorrência.

Desta forma, apuramos todo estudo realizado e foi identificado que a dispersão comparada em relação a uma pequena parte dos motores tem pouca dispersão entre motores indeterminado e sem tração. Sobretudo, o estudo que se detaca os motores a jato e de pistão a dispersão é compactada e por fim o motor turboeixo obtém a dispersão superior em relaão ao de turboélice."""

ax = sns.pairplot(frequencia_motores_de_aeronaves, y_vars='TURBOEIXO',
                  x_vars=['INDETERMINADO', 'JATO', 'PISTÃO', 'SEM TRAÇÃO', 'TURBOEIXO', 'TURBOÉLICE'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Turboeixo', fontsize=20, y=1.09)
ax

"""Análise do Turboeixo

Nesta análise conforme gráfico acima busca comparar e identificar a maior utilização do turboeixo.

Dado situação acima concluimos que a maior utilização do turboeixo se refere a maior dispersão em relação aos motores sitados. Mas, o turboeixo encontra-se no nível de utilização do turboélice que apresenta por várias vezes a variação nas ocorrências. 





"""

ax = sns.pairplot(frequencia_motores_de_aeronaves, y_vars='SEM TRAÇÃO',
                  x_vars=['INDETERMINADO', 'JATO', 'PISTÃO', 'SEM TRAÇÃO', 'TURBOEIXO', 'TURBOÉLICE'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Sem Tração', fontsize=20, y=1.09)
ax

"""Análise sem tração


Com base nos estudos de regressão linear acima onde se refere-se a quantidade dos motores por ocorrecias.

Neste terceiro estudo detém-se por foco principal a comparação de comportamento dos motores sem tração, onde idenficamos pouca interação com as ocorrências conforme linha traçada com trajeto voltado para o lado negativo. Com isso, concluímos que ocorre para baixo a dispersão entre o turboélice, onde se ocasiona com base na regressão decrescente comparada a quantidade de ocorrências de acidentes versos os motores sem tração.


"""

ax = sns.pairplot(frequencia_motores_de_aeronaves, y_vars='PISTÃO',
                  x_vars=['INDETERMINADO', 'JATO', 'PISTÃO', 'SEM TRAÇÃO', 'TURBOEIXO', 'TURBOÉLICE'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Pistão', fontsize=20, y=1.09)
ax

"""Análise do Motor Pistão

Utilizamos o enfoque principal o motor pistão afim de identificar a variação da regressão e seu comportamento com base nos acidentes ocorridos.

Podemos afirmar que o motores indeterminado, jato e sem tração tem maior probabilidade de nivelar os resultados nas ocorrências. No entanto,os motores turboeixo e turboélice destacam-se mais em relação ao motor de pistão.


"""

ax = sns.pairplot(frequencia_motores_de_aeronaves, y_vars='JATO',
                  x_vars=['INDETERMINADO', 'JATO', 'PISTÃO', 'SEM TRAÇÃO', 'TURBOEIXO', 'TURBOÉLICE'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Jato', fontsize=20, y=1.09)
ax

"""Análise do Motor Jato

  O estudo apresentado conforme acima visa abordar o comportamento e variação da dispersão do motor jato e apontamento conforme todos os estudos apresentados.

  Encontra-se a particularidade neste estudo que envolve alto índice de varição onde se mostra a comparação com o motor indeterminado onde avaliamos  a pequena dispersão superior. No entanto, o motor pistão e o de turboélice foi identificado a dispersão levemente inferior. Podemos afirmar que o motor sem tração tem-se pequena variação de dispersão inferior com base no motor jato. 

  Concluimos que neste estudo foi identificado maior variação entre os motores e destaque para a dispersão superior do motores pista e turboélice. Desta forma, vale ressaltar que o motor sem tração se ocorre a variação inferior com base no motor jato e o motor que se destacou com maior dispersão denominado por turboeixo.



"""

ax = sns.pairplot(frequencia_motores_de_aeronaves, y_vars='INDETERMINADO',
                  x_vars=['INDETERMINADO', 'JATO', 'PISTÃO', 'SEM TRAÇÃO', 'TURBOEIXO', 'TURBOÉLICE'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Indeterminado', fontsize=20, y=1.09)
ax

"""Análise do Motor Indeterminado

Com base nos estudos de regressão linear acima onde se refere-se a quantidade dos motores por ocorrecias.

Neste terceiro estudo detém-se por foco principal a comparação de comportamento dos motores Indeterminado, onde idenficamos pouca interação com as ocorrencias conforme linha traçada com trajeto voltado para o lado negativo. Com isso, concluimos que ocorre para baixo a dispersão entre o turboélice, onde ocorre com a regressão decrescente comparada com a quantidade de ocorrências de acidentes e com os motores sem tração.


"""

frequencia_motores_de_aeronaves.describe().round(2)

"""Temos por objetivo identifcar os tipos de potência do motor e os tipos aeronaves."""

# Estudo realiado com base na quantidade de areronaves por quantidade  de motores
frequencia_variacoes_motor = pd.crosstab(ocorrencias['aeronave_tipo'], ocorrencias['aeronave_motor_quantidade'])
frequencia_variacoes_motor

percentual_variacoes_motor = pd.crosstab(ocorrencias['aeronave_tipo'],
                      ocorrencias['aeronave_motor_quantidade'],
                      normalize = True) * 100
percentual_variacoes_motor.round(2)

vm = sns.distplot(frequencia_variacoes_motor)
vm.figure.set_size_inches(12, 6)
vm.set_title('Histograma de Frequência da Potência do Motor', fontsize=16)
vm

"""Análise da potência do Motor

Com base no estudo realizado comforme gráfico acima, identificamos que o histograma detém-se o comportamento simétrico com base variação de potências de motor.

"""

moda_variacoes_motor = frequencia_variacoes_motor.mode()
moda_variacoes_motor

mediana_variacoes_motor = frequencia_variacoes_motor.median()
mediana_variacoes_motor

media_variacoes_motor = frequencia_variacoes_motor.mean()
media_variacoes_motor

"""###### Medidas de Dispersão"""

desvio_medio_potencia = frequencia_variacoes_motor.mad()
desvio_medio_potencia

"""*Desvio Padrão*"""

desvio_padrao_motores = np.sqrt(desvio_medio_potencia)
desvio_padrao_motores

"""#### *Quartis, decis e percentis*

Fizemos as mediadas com a dispersão por ``25%``, ``50%`` e ``75%`` por cada potência de motores.

Visamos a apurar a quantidade de potência dos motores:
"""

quartis_motores = frequencia_motores_de_aeronaves.quantile([0.25, 0.5, 0.75])
quartis_motores

ax = sns.boxplot(data = frequencia_variacoes_motor, orient = 'o')
ax.figure.set_size_inches(10, 3)
ax.set_title('Potência do Motor', fontsize=18)
ax.set_xlabel('Variância da Potência', fontsize=14)
ax

"""Análise do Desvio Padrão dos Motores  - (Quartis, Decis e Percentis)

Com base no estudo realizado comforme gráfico acima, onde pode-se notar o desvio padrão das potências dos motores destaca-se o Monomotor por devido agrupamento de ocorrências em relação aos outros motores. Concluimos que o comportamento dos outros motores mantém-se de forma compactada.



"""

frequencia_variacoes_motor.describe().round(2)

"""#### *Regreção Linear dos Tipos de Motores de Aeronave*

*Gráficos de Dispersão Entre os Motores de Aeronaves*
"""

ax = sns.pairplot(frequencia_variacoes_motor, y_vars='BIMOTOR',
                  x_vars=['BIMOTOR', 'INDETERMINADO', 'MONOMOTOR', 'QUADRIMOTOR', 'SEM TRAÇÃO', 'TRIMOTOR'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Bimotor', fontsize=20, y=1.09)
ax

"""Análise da Regressão Linear do Bimotor

  Com base nos estudo de Regressão Liner que se refere a potência dos motores, constata-se a variação de potência utilizadas nas aeronaves. Com isso, identificamos a primeira variaçãodo motor onde foi-se realizado a comparação com base nas potências e tipos de ocorrências conforme gráfico acima.

  Elencamos o ``Bimotor`` de forma inicial afim de avaliar a variação de potência com os os outros tipos de motores, com o intuito de identificar o motor que apresenta a maior quantidade de acidentes.

  Concluímos que a o motor ``Indeterminado`` e o ``Sem Tração`` onde se obteve maior otimização da potência com maior volume. Mas a potência dos motores ``Monomotor, Quadrimotor e Trimotor`` ocorre-se um menor volume de potência.
 



comparação de potência do Bimotor em relação aos outros motores
"""

ax = sns.pairplot(frequencia_variacoes_motor, y_vars='INDETERMINADO',
                  x_vars=['BIMOTOR', 'INDETERMINADO', 'MONOMOTOR', 'QUADRIMOTOR', 'SEM TRAÇÃO', 'TRIMOTOR'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Indeterminado', fontsize=20, y=1.09)
ax

"""
  Nesta análise  da potência do motor ``Indeterminado`` conforme gráfico acima podemos dizer que o comportamento de variação das potências, onde podemos alegar que o ``Bimotor`` e o ``Monomotor`` tem alto índice decrescente. 
  Desta forma, concluímos que o ``Quadrimotor`` e ``Trimotor`` se encontra um padrão regular conforme decorrer dos anos. Com isso, o motor ``Sem tração`` foi se identificado um volume decrescente ao comparação com os outros motores.

"""

ax = sns.pairplot(frequencia_variacoes_motor, y_vars='MONOMOTOR',
                  x_vars=['BIMOTOR', 'INDETERMINADO', 'MONOMOTOR', 'QUADRIMOTOR', 'SEM TRAÇÃO', 'TRIMOTOR'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Monomotor', fontsize=20, y=1.09)
ax

"""  Com esse terceiro estudo que tem-se por objeto principal, o ``Monomotor`` para verificar a``variação`` entre as ``potências`` conforme objetivo principal elencado acima.

  Desta forma, chegamos a concluisão que o ``Bimotor``, ``Quadrimotor`` e o ``Trimotor`` apresenta ``indícios`` de regressão conforme passar dos anos enquanto o ``Indeterminado`` e ``Sem Tração`` tem um grande índice de crescimento.


"""

ax = sns.pairplot(frequencia_variacoes_motor, y_vars='QUADRIMOTOR',
                  x_vars=['BIMOTOR', 'INDETERMINADO', 'MONOMOTOR', 'QUADRIMOTOR', 'SEM TRAÇÃO', 'TRIMOTOR'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Quadrimotor', fontsize=20, y=1.09)
ax

"""Com esse quarto estudo que tem-se por objeto principal, o ``Quadrimotor`` para verificar o comportamento de variação entre as potências.

Com base no gráfico acima concluímos conforme analise realizada que o ``Bimotor``, ``Monomotor`` e  ``Trimotor`` tem o comportamento igual conforme diminuição ao decorrer dos anos, mas a potência do ``Indeterminado`` e ``Sem Tração`` tem o comportamento semelhante no que se visa aumento conforme decorrer dos anos.


"""

ax = sns.pairplot(frequencia_variacoes_motor, y_vars='SEM TRAÇÃO',
                  x_vars=['BIMOTOR', 'INDETERMINADO', 'MONOMOTOR', 'QUADRIMOTOR', 'SEM TRAÇÃO', 'TRIMOTOR'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Sem Tração', fontsize=20, y=1.09)
ax

"""  Com esse quinto estudo que tem-se por objeto principal, o ``Sem Tração`` para verificar o comportamento de variação entre as potências.

  Chegamos a conclusão que o ``Bimotor``, ``Monomotor`` apresentam-se menor índice de crescimento ao longo dos anos e a potência ``Indeterminada`` indica menor crescimento ao longo da variação. Mas as ``potências`` ``Quadrimotor`` e ``Trimotor`` demonstra dispersão ``regular`` e  nivelada com base nos motores apresentados.


"""

ax = sns.pairplot(frequencia_variacoes_motor, y_vars='TRIMOTOR',
                  x_vars=['BIMOTOR', 'INDETERMINADO', 'MONOMOTOR', 'QUADRIMOTOR', 'SEM TRAÇÃO', 'TRIMOTOR'], 
                  kind='reg')
ax.fig.suptitle('Dispersão entre as Variáveis por Trimotor', fontsize=20, y=1.09)
ax

"""Com esse último estudo que tem-se por objeto principal, o ``Trimotor`` para verificar o comportamento de variação entre as potências.

Neste estudo podemos afirma que os tipos de potências ``Bimotor``, ``Monomotor`` e ``Qaudrimotor`` apresentam-se comportamento que se decresce ao longo dos anos. Mas o ``Indeterminado`` e ``Sem Tração`` obtem-se o comportamento crescente ao decorrer dos anos.

## Quantidade de Ocorrências por Acento por Acidente
"""

frequencia_por_assentos = pd.crosstab(ocorrencias['aeronave_assentos'], ocorrencias['tipo'])
frequencia_por_assentos

percentual_de_assentos = pd.crosstab(ocorrencias['aeronave_assentos'],
                      ocorrencias['tipo'],
                      normalize = True) * 100
percentual_de_assentos.round(2)

ax = sns.distplot(frequencia_por_assentos)
ax.figure.set_size_inches(12, 6)
ax.set_title('Histograma de Frequência por Assentos', fontsize=16)
ax

"""Regressão Linear por Assentos

  Com base no ``histograma`` acima identificamos o comportamneto que se ocorre com base nos três tipos de acidentes conforme ocorrências acima. 

 Identificamos o comportamento dos dados onde se apresenta por  ``simétrico`` que se determinam-se padronizados conforme análise realizada.



"""

frequencia_por_assentos.describe().round(2)

"""#### *Regreção Linear dos Tipos de Acidente por Assentos*

*Gráficos de Dispersão Entre os Acidente por Assentos*
"""

ax = sns.pairplot(frequencia_por_assentos)
ax.fig.suptitle('Dispersão entre as Variaveis', fontsize=20, y=1.09)
ax

"""Conforme estudo apresentado acima temos por objetivo detalhar análise de  dispersão entre as variáveis afim de verificar a ``distribuição`` entre ``assentos`` em cada tipo de ``ocorrência``.


  Contudo, chegamos a conclusão que os tipos de ocorrências avaliadas são: 

---

* Acidentes;
* Incidentes;
* Incidentes graves;

---

*Acidente x Incidente*
"""

ax = sns.jointplot(x='ACIDENTE', y='INCIDENTE', data=frequencia_por_assentos, kind='reg')
ax.fig.suptitle('Dispersão - Ancidente X Incidente', fontsize=18, y=1.05)
ax.set_axis_labels("Ancidentes", "Incidente", fontsize=14)
ax

"""Nesse  estudo com base no gráfico acima podemos identificar a ``regressão ``Linear`` e ``Histograma`` onde apuramos a variação de comportamento dos tipos de assentos envolvidos nos ``acidentes`` e ``incidentes``.

   Com isso, pode-se alegar que houve um alto índice de crescimento de assentos envolvidos com as ocorrências apresentadas entre 2010 à 2019. Desta forma, identificamos maior dispersão de ``Regressão linear``.

*Acidente x Incidente Grave*
"""

ax = sns.jointplot(x='ACIDENTE', y='INCIDENTE GRAVE', data=frequencia_por_assentos, kind='reg')
ax.fig.suptitle('Dispersão - Ancidente X Incidente Grave', fontsize=18, y=1.05)
ax.set_axis_labels("Acidentes", "Incidente Grave", fontsize=14)
ax

"""Nesse estudo com base no gráfico acima podemos identificar a regressão Linear e Histograma onde apuramos a variação de comportamento dos tipos de assentos envolvidos nos acidentes e incidentes Graves``.

  Ensuma, podemos dizer que houve um alto índice de crescimento de assentos envolvidos. No entanto ao realizar a comparação com análise anterior constatamos que a dispersão se apresenta menor.

*Incidente x Incidente Grave*
"""

ax = sns.jointplot(x='INCIDENTE', y='INCIDENTE GRAVE', data=frequencia_por_assentos, kind='reg')
ax.fig.suptitle('Dispersão - Incidente X Incidente Grave', fontsize=18, y=1.05)
ax.set_axis_labels("Incidentes", "Incidente Grave", fontsize=14)
ax

"""Com base nos estudos antetiores neste estudo tem-se por objetivo elencar a dispersão/histograma entre Incidentes e Incidentes Graves e o comparativo afim de obter o tipo de ocorrência que apresenta maior e menor variação de comportamento.

  Com a visualização conseguimos verificar um alto indice de dispersão agrupada no inicio da regresão linear conforme comportamento e quantidade semelhantes apuradas. 

  Desta forma, identificamos menor dispersão de ``Regressão linear``em relação as analises ateriores.

##### **Estatística**

  Trata-se do conceito que visa coletar dados, da interpretação, da análise e podemos dizer que o intuito que obtém-se maior interesse com base no interesse das empresas se refere visualização de volumes de dados núméricos. "Mas saber Estatística permite que se avaliem os métodos de recolha, os próprios resultados, se detetem e rejeitem falsas conclusões." (REIS et al., 2015, p.21).
  Com isso, podemos dizer que a estatística tem o estudo de coleta de dados que se representa por ``média``, ``moda`` e ``mediana``.

##### **Média**

  Podemos dizer que a Média calcula a somatória de todos os valores onde visa se dividir pela quantidade de elementos do conjunto.

##### **Moda**

A Moda representa o item(valor) mais frequente do conjunto de dados, onde para visualizar a Moda basta observar a frequencia com que os valores são identificados no conjunto.

##### **Mediana**

Representa-se o valor central de um conjunto de dados onde para identificar o valor da ``mediana`` necessita-se colocar os valores de forma que se inicie com base na ordem crescente ou decrescente.

##### **Desvio Padrão**

Podemos afirmar que o ``Desvio Padrão`` do tipo quantitativo se identifica por mostrar a dispersão dos dados próximos ao valor da média, que pode-se encontrar o tamanho da raiz quadrada da ``variância amostral``.

  Conforme Fred Soares,DESVIO PADRÃO E IMPRECISÃO DE LEITURA: PAQUÍMETRO,Novembro 2016 "O desvio padrão é um bom exemplo desse método de análise; ele é uma medida que expressa o grau de dispersão de um conjunto de dados, ou seja, o desvio padrão indica o quanto um conjunto de dados é uniforme,  o quanto mais próximo de 0 for o desvio padrão, mais preciso são os dados."

##### *Regressão Linear*

Podemos afirmar que a Regressão linear tem por objetivo traçar, a reta através de dadosno diagrama de dispersão. Com isso, a reta resume esses dados, o que é útil quando fazemos previsões. O que é regressão linear? Quando vemos uma relação em um diagrama de dispersão, podemos usar uma reta para resumir essa relação nos dados.



"A análise de regressão linear é usada para prever o valor de uma variável com base no valor de outra. A variável que deseja prever é chamada de variável dependente. A variável que é usada para prever o valor de outra variável é chamada de variável independente".

##### **Bibliotecas**


##### Pandas

Pacote que fornece poderosas ferramentas que se pode manipular e realizar análise de dados de forma simples e com maior eficiência.

##### Nunpy

Biblioteca mais utilizada a realizar calculos com Arrays Multidimensionais.
Desta forma por obter maior quantidade de funções e operações pode-se afirmar que a biblioteca tem maior eficiencia para realização de calculos.


##### Seaborn

Biblioteca que tem por objetivo a construção de gráficos estatísticos com Python e se integra com a estrutura do Pandas.


##### Matplotlib
Biblioteca que tem por objetivo a construção de gráficos estatísticos com Python onde visa maior qualidade onde é muito utilizado pelos Cientistas de Dados.

# Conclusão

  Com base nos estudos realizados identificamos vários tipos de comportamentos de estados, ocorrências, tipos de aeronaves, variações de motores, variação de potências entre os tipos de motores e a quantidade de assentos envolvidos nas ocorrências com base no arquivo do CENIPA entre 2010 à 2019. Com isso, aplicamos os estudos matemáticos, moda, média, mediana, desvio padrão, dispersão de variáveis e regressão linear com o intuito de identificar e realizar tomada de decisão sobre o comportamento onde se ocorre as ocorrências.Com isso, constata-se a variação entre os tipos de aeronaves por tipos de motores e tipos de potência, afim de identificar a aeronave ocorre a maior quantidade de ocorrência. 
   Sobretudo, conseguimos identifdicar a quantidade de assentos envolvidos pelos tipos de aeronaves e analisar cada estudo afim de melhorar a segurança para os clientes e reduzir as ocorrências.

# Referências

CASA DAS CIÊNCIAS,Desvio Padrão Amostral. Disponível em:<https://rce.casadasciencias.org/rceapp/art/2013/022> Acesso:15/10/2021 ás 16:45.


DIDÁTICA TECH INTELIGÊNCIA ARTIFICIAL & DATA SCIENCE, O pacote Pandas – Python para Machine Learning. Disponível em:<https://didatica.tech/o-pacote-pandas-python-para-machine-learning> Acesso:30/11/2021 ás 18:35.


IBM, Regressão Linear. Disponível em:<https://www.ibm.com/br-pt/analytics/learn/linear-regression> Acesso:10/10/2021 ás 12:41.


MUNDO DA EDUCAÇÃO, Estatística. Disponível em:<https://mundoeducacao.uol.com.br/matematica/estatistica.htm> Acesso:30/11/2021 ás 21:23.

REIS, E. et al. Estatística Aplicada. Portugal, LISBOA, 6°Edição, 2015.

SPIEGEL, Murray R. Probabilidade e estatística. Tradução técnica: Lori Viali. 3. ed. Porto Alegre: Brookman, 2013.

TODAMATÉRIA, Média, Moda e Mediana. Disponível em:<https://www.todamateria.com.br/media-moda-e-mediana> Acesso:30/11/2021 ás 15:56.


WIKEPÉDIA, Diagraama de caixa. Disponível em:<https://pt.wikipedia.org/wiki/Diagrama_de_caixa> Acesso:28/11/2021 ás 19:41.


WIKEPÉDIA, Histograma. Disponível em:<https://pt.wikipedia.org/wiki/Histograma> Acesso:29/11/2021 ás 21:19.
"""

